//With Thunk, we can return a function instead of an action object (which we do normally)
export const createProject = project => {
  return (dispatch, getState, { getFirebase, getFirestore }) => {
    /****** USING THUNK, HALT AND MAKE ASYNC CALL TO DATABASE ******/
    const firestore = getFirestore();
    const profile = getState().firebase.profile;
    const uid = getState().firebase.auth.uid;

    let project_collection = firestore.collection("projects"); //Reference to our projects collection on our Firestore
    //Here we are adding a new document to the projects collection in our firestore. Doc ID is auto generated by Firestore.
    //This is asyncronous and will return a promise, so we can add a then at the end of this add funciton.
    project_collection
      .add({
        ...project,
        authorFirstName: profile.firstName,
        authorLastName: profile.lastName,
        authorId: uid,
        createdAt: new Date()
      })
      .then(() => {
        /********** CONTINUE DISPATCH *************/
        dispatch({ type: "CREATE_PROJECT", project: project });
      })
      .catch(err => {
        /********** CATCH ERROR *************/
        //If add cant be comepleted for some reason, then catch the error here.
        dispatch({ type: "CREATE_PROJECT_ERROR", err: err });
      });
  };
};
